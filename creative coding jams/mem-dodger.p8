pico-8 cartridge // http://www.pico-8.com
version 32
__lua__

posx = 60.0
posy = 60.0
velx = 0.0
vely = 0.0
spd = .04
bounce = .5
drag = .01
t = 0

lastposx = 60.0
lastposy = 60.0

shadowinterval = 20
shadowflash = 5
shadowdelay = 10

shadowflashon = 8
shadowflashoff = 4
shadow_t = 0

postracker = {}
shadows = {}


function _update60()
	--movement code
	local inputx = 0
	local inputy = 0
	if(btn(0)) inputx -= 1
	if(btn(1)) inputx += 1
	if(btn(2)) inputy -= 1
	if(btn(3)) inputy += 1
	if inputx ~= 0 and inputy~= 0 then
		inputx *= .707
		inputy *= .707
	end
	velx += inputx * spd
	vely += inputy * spd
	posx += velx
	posy += vely
	if mid(-2, posx, 122) ~= posx then
		posx -= velx
		velx *= -bounce
	end
	if mid(0, posy, 120) ~= posy then
		posy -= vely
		vely *= -bounce
	end
	if inputx == 0 and inputy == 0 then
		velx *= (1 - drag) ;
		vely *= (1 - drag) 
	end


	--store pos data
	if(#shadows > 0) then
		local deltax = posx - lastposx
		local deltay = posy - lastposy
		if abs(deltax) >= 1 or abs(deltay) >= 1 then
			local data = {}
			if abs(deltax) >= 1 then
				data.x = deltax
				lastposx = posx
			end
			if abs(deltay) >= 1 then
				data.y = deltay
				lastposy = posy
			end
			postracker[t] = data
		end
	end


	--update shadows


	for i=1, #shadows do
		local shadow = shadows[i];
		local s_t = t - i * shadowdelay
	  local data = postracker[s_t]
		if data then
			if i < #shadows or shadow_t > shadowflash then
				if(data.x) shadow.x += data.x
				if(data.y) shadow.y += data.y
			end
			if (i == #shadows) del(postracker, postracker[s_t]);
		end
	end

	if t % shadowinterval == 0 then
		if #shadows == 0 then
			add(shadows, {x = posx, y = posy})
		else
			local last_shadow = shadows[#shadows];
			add(shadows, {x = last_shadow.x, y = last_shadow.y})
		end
		shadow_t = 0
	else
		shadow_t += 1
	end

	t += 1
end




function _draw()
	cls();
	rect(0, 0, 127, 127, 8)
	spr(1, posx, posy)

	for i=1, #shadows do
		local shadow = shadows[i];
		if i == #shadows and shadow_t < shadowflash then
			if shadow_t % (shadowflashon + shadowflashoff) < shadowflashon then
				spr(17, shadow.x, shadow.y)
			end
		else
			spr(2, shadow.x, shadow.y)
		end
	end

	print(stat(0) / 2048, 0, 0, 7);
end











__gfx__
00000000000000000000000000eeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000099000000880000eeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000009900000088000eeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000000900000008000eeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000009990000088800eeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000000900000008000eeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000009000000080000eeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000909000008080000eeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
